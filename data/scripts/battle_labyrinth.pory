script EventScript_EnterSanctuary {
	clearflag(FLAG_IN_ZONE_NOT_SANCTUARY)
	call(EventScript_MoveCameraUp)
	applymovement(1, Common_Movement_ExclamationMark)
	applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_FaceUp)
	playse(SE_PIN)
	waitmovement(0)
	waitse
	call(EventScript_MoveCameraDown)
	applymovement(1, Common_Movement_Colress_WalkDown)
	waitmovement(0)
	playfanfare(MUS_OBTAIN_BADGE)
	return
}

script EventScript_MoveCameraUp {
	special(SpawnCameraObject)
	applymovement(OBJ_EVENT_ID_CAMERA, Common_Movement_WalkUp)
	waitmovement(0)
	applymovement(OBJ_EVENT_ID_CAMERA, Common_Movement_WalkUp)
	waitmovement(0)
	special(RemoveCameraObject)
	return
}

script EventScript_MoveCameraDown {
	special(SpawnCameraObject)
	applymovement(OBJ_EVENT_ID_CAMERA, Common_Movement_WalkDown)
	waitmovement(0)
	applymovement(OBJ_EVENT_ID_CAMERA, Common_Movement_WalkDown)
	waitmovement(0)
	special(RemoveCameraObject)
	return
}

script EventScript_Shop_General {
	lock
	faceplayer
	if (flag(FLAG_TIM_INTRO) == false) {
		msgbox(gText_Tim_Intro)
		setflag(FLAG_TIM_INTRO)
	}
	if ((var(VAR_ZONE) > 20) && (flag(FLAG_TIM_SUPER_POTION_INTRO) == false)) {
		msgbox(gText_Tim_ExplainSuperPotionDiscount)
		setflag(FLAG_TIM_SUPER_POTION_INTRO)
	}
	message(gText_Tim_Welcome)
	waitmessage
	switch (var(VAR_ZONE)) {
		case 1:
		case 2:
		case 3:
			pokemart(Shop_General_1to3)
		case 4:
		case 5:
		case 6:
		case 7:
			pokemart(Shop_General_4to8)
		case 9:
		case 10:
		case 11:
		case 12:
			if (flag(FLAG_BRUTAL_MODE_ON) == true) {
				pokemart(Shop_General_9to12_Brutal)
			} else {
				pokemart(Shop_General_9to12)
			}
		case 13:
		case 15:
		case 16:
			if (flag(FLAG_BRUTAL_MODE_ON) == true) {
				pokemart(Shop_General_13to16_Brutal)
			} else {
				pokemart(Shop_General_13to16)
			}
		case 17:
		case 18:
		case 20:
		case 21:
		case 22:
		case 23:
		case 24:
		case 25:
			if (flag(FLAG_BRUTAL_MODE_ON) == true) {
				pokemart(Shop_General_17to25_Brutal)
			} else {
				pokemart(Shop_General_17to25)
			}
		case 26:
			if ((flag(FLAG_BRUTAL_MODE_ON) == true) && (flag(FLAG_NUZLOCKE_ON) == true)) {
				pokemart(Shop_General_26to30_BrutalNuzlocke)
			} elif ((flag(FLAG_BRUTAL_MODE_ON) == false) && (flag(FLAG_NUZLOCKE_ON) == true)) {
				pokemart(Shop_General_26to30Nuzlocke)
			} elif ((flag(FLAG_BRUTAL_MODE_ON) == true) && (flag(FLAG_NUZLOCKE_ON) == false)) {
				pokemart(Shop_General_26to30_Brutal)
			} else {
				pokemart(Shop_General_26to30)
			}
	}
	msgbox(gText_Tim_Leave, MSGBOX_DEFAULT)
	release
}

mart Shop_General_1to3 {
	ITEM_POKE_BALL
	ITEM_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_REPEL
}

mart Shop_General_4to8 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_REPEL
}

mart Shop_General_9to12 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_X_ATTACK
	ITEM_X_DEFENSE
	ITEM_X_SP_ATK
	ITEM_X_SP_DEF
	ITEM_X_SPEED
	ITEM_X_ACCURACY
	ITEM_DIRE_HIT
	ITEM_GUARD_SPEC
}

mart Shop_General_9to12_Brutal {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
}

mart Shop_General_13to16 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_X_ATTACK
	ITEM_X_DEFENSE
	ITEM_X_SP_ATK
	ITEM_X_SP_DEF
	ITEM_X_SPEED
	ITEM_X_ACCURACY
	ITEM_DIRE_HIT
	ITEM_GUARD_SPEC
	ITEM_ETHER
}

mart Shop_General_13to16_Brutal {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_ETHER
}	

mart Shop_General_17to25 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_HYPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_X_ATTACK
	ITEM_X_DEFENSE
	ITEM_X_SP_ATK
	ITEM_X_SP_DEF
	ITEM_X_SPEED
	ITEM_X_ACCURACY
	ITEM_DIRE_HIT
	ITEM_GUARD_SPEC
	ITEM_ETHER
}

mart Shop_General_17to25_Brutal {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_HYPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_ETHER
}

mart Shop_General_26to30 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_HYPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REVIVE
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_X_ATTACK
	ITEM_X_DEFENSE
	ITEM_X_SP_ATK
	ITEM_X_SP_DEF
	ITEM_X_SPEED
	ITEM_X_ACCURACY
	ITEM_DIRE_HIT
	ITEM_GUARD_SPEC
	ITEM_ETHER
	ITEM_ELIXIR
	ITEM_HP_UP
	ITEM_PROTEIN
	ITEM_IRON
	ITEM_CALCIUM
	ITEM_ZINC
	ITEM_CARBOS
}

mart Shop_General_26to30Nuzlocke {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_HYPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_X_ATTACK
	ITEM_X_DEFENSE
	ITEM_X_SP_ATK
	ITEM_X_SP_DEF
	ITEM_X_SPEED
	ITEM_X_ACCURACY
	ITEM_DIRE_HIT
	ITEM_GUARD_SPEC
	ITEM_ETHER
	ITEM_ELIXIR
	ITEM_HP_UP
	ITEM_PROTEIN
	ITEM_IRON
	ITEM_CALCIUM
	ITEM_ZINC
	ITEM_CARBOS
}

mart Shop_General_26to30_Brutal {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_HYPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REVIVE
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_ETHER
	ITEM_ELIXIR
}

mart Shop_General_26to30_BrutalNuzlocke {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_HYPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_ETHER
	ITEM_ELIXIR
}

script EventScript_Shop_Unique_Varrick {
	lock
	faceplayer
	if (flag(FLAG_VARRICK_INTRO) == false) {
		msgbox(gText_Varrick_Intro)
		setflag(FLAG_VARRICK_INTRO)
	}
	message(gText_Varrick_Welcome)
	waitmessage
	switch (var(VAR_ZONE)) {
		case 1:
		case 2:
		case 3:
			pokemart(Shop_Unique_Varrick_1to3)
		case 4:
		case 5:
			pokemart(Shop_Unique_Varrick_4to5)
		case 6:
		case 7:
			pokemart(Shop_Unique_Varrick_6to8)
		case 9:
		case 10:
			pokemart(Shop_Unique_Varrick_9to10)
		case 11:
		case 12:
		case 13:
			pokemart(Shop_Unique_Varrick_11to14)
		case 15:
		case 16:
		case 17:
		case 18:
		case 20:
			pokemart(Shop_Unique_Varrick_15to20)
		case 21:
		case 22:
		case 23:
			pokemart(Shop_Unique_Varrick_21to23)
		case 24:
		case 25:
			pokemart(Shop_Unique_Varrick_24to25)
		case 26:
			if (flag(FLAG_BRUTAL_MODE_ON) == true) {
				pokemart(Shop_Unique_Varrick_26to30_Brutal)
			} else {
				pokemart(Shop_Unique_Varrick_26to30)
			}
	}
	msgbox(gText_Varrick_Leave, MSGBOX_DEFAULT)
	release
}


mart Shop_Unique_Varrick_1to3 {
	ITEM_HEAL_BALL
}

mart Shop_Unique_Varrick_4to5 {
	ITEM_ORAN_BERRY
	ITEM_HEAL_BALL
	ITEM_MIRACLE_SEED
	ITEM_CHARCOAL
	ITEM_MYSTIC_WATER
}	

mart Shop_Unique_Varrick_6to8 {
	ITEM_ORAN_BERRY
	ITEM_CHERI_BERRY
	ITEM_CHESTO_BERRY
	ITEM_PECHA_BERRY
	ITEM_RAWST_BERRY
	ITEM_ASPEAR_BERRY
	ITEM_PERSIM_BERRY
	ITEM_HEAL_BALL
	ITEM_NET_BALL
	ITEM_NEST_BALL
	ITEM_MUSCLE_BAND
	ITEM_WISE_GLASSES
	ITEM_MIRACLE_SEED
	ITEM_CHARCOAL
	ITEM_MYSTIC_WATER
}	

mart Shop_Unique_Varrick_9to10 {
	ITEM_ORAN_BERRY
	ITEM_CHERI_BERRY
	ITEM_CHESTO_BERRY
	ITEM_PECHA_BERRY
	ITEM_RAWST_BERRY
	ITEM_ASPEAR_BERRY
	ITEM_PERSIM_BERRY
	ITEM_HEAL_BALL
	ITEM_NET_BALL
	ITEM_NEST_BALL
	ITEM_MUSCLE_BAND
	ITEM_WISE_GLASSES
	ITEM_MIRACLE_SEED
	ITEM_CHARCOAL
	ITEM_MYSTIC_WATER
	ITEM_SILK_SCARF
	ITEM_SHARP_BEAK
	ITEM_MAGNET
	ITEM_SILVER_POWDER
	ITEM_POISON_BARB
	ITEM_TWISTED_SPOON
	ITEM_SOFT_SAND
	ITEM_HARD_STONE
	ITEM_BLACK_GLASSES
	ITEM_BLACK_BELT
	ITEM_SPELL_TAG
	ITEM_DRAGON_FANG
	ITEM_NEVER_MELT_ICE
	ITEM_RED_NECTAR
	ITEM_YELLOW_NECTAR
	ITEM_PINK_NECTAR
	ITEM_PURPLE_NECTAR
}

mart Shop_Unique_Varrick_11to14 {
	ITEM_ORAN_BERRY
	ITEM_CHERI_BERRY
	ITEM_CHESTO_BERRY
	ITEM_PECHA_BERRY
	ITEM_RAWST_BERRY
	ITEM_ASPEAR_BERRY
	ITEM_PERSIM_BERRY
	ITEM_MUSCLE_BAND
	ITEM_WISE_GLASSES
	ITEM_MIRACLE_SEED
	ITEM_CHARCOAL
	ITEM_MYSTIC_WATER
	ITEM_SILK_SCARF
	ITEM_SHARP_BEAK
	ITEM_MAGNET
	ITEM_SILVER_POWDER
	ITEM_POISON_BARB
	ITEM_TWISTED_SPOON
	ITEM_SOFT_SAND
	ITEM_HARD_STONE
	ITEM_BLACK_GLASSES
	ITEM_BLACK_BELT
	ITEM_SPELL_TAG
	ITEM_DRAGON_FANG
	ITEM_NEVER_MELT_ICE
}

mart Shop_Unique_Varrick_15to20 {
	ITEM_ORAN_BERRY
	ITEM_CHERI_BERRY
	ITEM_CHESTO_BERRY
	ITEM_PECHA_BERRY
	ITEM_RAWST_BERRY
	ITEM_ASPEAR_BERRY
	ITEM_PERSIM_BERRY
	ITEM_MUSCLE_BAND
	ITEM_WISE_GLASSES
	ITEM_SCOPE_LENS
	ITEM_WIDE_LENS
	ITEM_ZOOM_LENS
	ITEM_METRONOME
	ITEM_MIRACLE_SEED
	ITEM_CHARCOAL
	ITEM_MYSTIC_WATER
	ITEM_SILK_SCARF
	ITEM_SHARP_BEAK
	ITEM_MAGNET
	ITEM_SILVER_POWDER
	ITEM_POISON_BARB
	ITEM_TWISTED_SPOON
	ITEM_SOFT_SAND
	ITEM_HARD_STONE
	ITEM_BLACK_GLASSES
	ITEM_BLACK_BELT
	ITEM_SPELL_TAG
	ITEM_DRAGON_FANG
	ITEM_NEVER_MELT_ICE
}

mart Shop_Unique_Varrick_21to23 {
	ITEM_SITRUS_BERRY
	ITEM_ORAN_BERRY
	ITEM_CHERI_BERRY
	ITEM_CHESTO_BERRY
	ITEM_PECHA_BERRY
	ITEM_RAWST_BERRY
	ITEM_ASPEAR_BERRY
	ITEM_PERSIM_BERRY
	ITEM_MUSCLE_BAND
	ITEM_WISE_GLASSES
	ITEM_SCOPE_LENS
	ITEM_WIDE_LENS
	ITEM_ZOOM_LENS
	ITEM_METRONOME
	ITEM_MIRACLE_SEED
	ITEM_CHARCOAL
	ITEM_MYSTIC_WATER
	ITEM_SILK_SCARF
	ITEM_SHARP_BEAK
	ITEM_MAGNET
	ITEM_SILVER_POWDER
	ITEM_POISON_BARB
	ITEM_TWISTED_SPOON
	ITEM_SOFT_SAND
	ITEM_HARD_STONE
	ITEM_BLACK_GLASSES
	ITEM_BLACK_BELT
	ITEM_SPELL_TAG
	ITEM_DRAGON_FANG
	ITEM_NEVER_MELT_ICE
	ITEM_METAL_COAT
	ITEM_LIGHT_BALL
	ITEM_LEEK
	ITEM_THICK_CLUB
	ITEM_LUCKY_PUNCH
}

mart Shop_Unique_Varrick_24to25 {
	ITEM_SITRUS_BERRY
	ITEM_ORAN_BERRY
	ITEM_CHERI_BERRY
	ITEM_CHESTO_BERRY
	ITEM_PECHA_BERRY
	ITEM_RAWST_BERRY
	ITEM_ASPEAR_BERRY
	ITEM_PERSIM_BERRY
	ITEM_MUSCLE_BAND
	ITEM_WISE_GLASSES
	ITEM_SCOPE_LENS
	ITEM_WIDE_LENS
	ITEM_ZOOM_LENS
	ITEM_METRONOME
	ITEM_MIRACLE_SEED
	ITEM_CHARCOAL
	ITEM_MYSTIC_WATER
	ITEM_SILK_SCARF
	ITEM_SHARP_BEAK
	ITEM_MAGNET
	ITEM_SILVER_POWDER
	ITEM_POISON_BARB
	ITEM_TWISTED_SPOON
	ITEM_SOFT_SAND
	ITEM_HARD_STONE
	ITEM_BLACK_GLASSES
	ITEM_BLACK_BELT
	ITEM_SPELL_TAG
	ITEM_DRAGON_FANG
	ITEM_NEVER_MELT_ICE
	ITEM_METAL_COAT
}

mart Shop_Unique_Varrick_26to30 {
	ITEM_EXP_SHARE
	ITEM_MACHO_BRACE
	ITEM_POWER_WEIGHT
	ITEM_POWER_BRACER
	ITEM_POWER_BELT
	ITEM_POWER_LENS
	ITEM_POWER_BAND
	ITEM_POWER_ANKLET
	ITEM_SITRUS_BERRY
	ITEM_ORAN_BERRY
	ITEM_CHERI_BERRY
	ITEM_CHESTO_BERRY
	ITEM_PECHA_BERRY
	ITEM_RAWST_BERRY
	ITEM_ASPEAR_BERRY
	ITEM_PERSIM_BERRY
	ITEM_NORMAL_GEM
	ITEM_FIRE_GEM
	ITEM_WATER_GEM
	ITEM_ELECTRIC_GEM
	ITEM_GRASS_GEM
	ITEM_ICE_GEM
	ITEM_FIGHTING_GEM
	ITEM_POISON_GEM
	ITEM_GROUND_GEM
	ITEM_FLYING_GEM
	ITEM_PSYCHIC_GEM
	ITEM_BUG_GEM
	ITEM_ROCK_GEM
	ITEM_GHOST_GEM
	ITEM_DRAGON_GEM
	ITEM_DARK_GEM
	ITEM_STEEL_GEM
	ITEM_FAIRY_GEM
	ITEM_EVIOLITE
	ITEM_MUSCLE_BAND
	ITEM_WISE_GLASSES
	ITEM_SCOPE_LENS
	ITEM_WIDE_LENS
	ITEM_ZOOM_LENS
	ITEM_METRONOME
	ITEM_MIRACLE_SEED
	ITEM_CHARCOAL
	ITEM_MYSTIC_WATER
	ITEM_SILK_SCARF
	ITEM_SHARP_BEAK
	ITEM_MAGNET
	ITEM_SILVER_POWDER
	ITEM_POISON_BARB
	ITEM_TWISTED_SPOON
	ITEM_SOFT_SAND
	ITEM_HARD_STONE
	ITEM_BLACK_GLASSES
	ITEM_BLACK_BELT
	ITEM_SPELL_TAG
	ITEM_DRAGON_FANG
	ITEM_NEVER_MELT_ICE
	ITEM_METAL_COAT
}

mart Shop_Unique_Varrick_26to30_Brutal {
	ITEM_EXP_SHARE
	ITEM_SITRUS_BERRY
	ITEM_ORAN_BERRY
	ITEM_CHERI_BERRY
	ITEM_CHESTO_BERRY
	ITEM_PECHA_BERRY
	ITEM_RAWST_BERRY
	ITEM_ASPEAR_BERRY
	ITEM_PERSIM_BERRY
	ITEM_NORMAL_GEM
	ITEM_FIRE_GEM
	ITEM_WATER_GEM
	ITEM_ELECTRIC_GEM
	ITEM_GRASS_GEM
	ITEM_ICE_GEM
	ITEM_FIGHTING_GEM
	ITEM_POISON_GEM
	ITEM_GROUND_GEM
	ITEM_FLYING_GEM
	ITEM_PSYCHIC_GEM
	ITEM_BUG_GEM
	ITEM_ROCK_GEM
	ITEM_GHOST_GEM
	ITEM_DRAGON_GEM
	ITEM_DARK_GEM
	ITEM_STEEL_GEM
	ITEM_FAIRY_GEM
	ITEM_EVIOLITE
	ITEM_MUSCLE_BAND
	ITEM_WISE_GLASSES
	ITEM_SCOPE_LENS
	ITEM_WIDE_LENS
	ITEM_ZOOM_LENS
	ITEM_METRONOME
	ITEM_MIRACLE_SEED
	ITEM_CHARCOAL
	ITEM_MYSTIC_WATER
	ITEM_SILK_SCARF
	ITEM_SHARP_BEAK
	ITEM_MAGNET
	ITEM_SILVER_POWDER
	ITEM_POISON_BARB
	ITEM_TWISTED_SPOON
	ITEM_SOFT_SAND
	ITEM_HARD_STONE
	ITEM_BLACK_GLASSES
	ITEM_BLACK_BELT
	ITEM_SPELL_TAG
	ITEM_DRAGON_FANG
	ITEM_NEVER_MELT_ICE
	ITEM_METAL_COAT
}	

script EventScript_Shop_Unique_ZhuLi {
	lock
	faceplayer
	message(gText_ZhuLi_Welcome)
	waitmessage
	switch (var(VAR_ZONE)) {
		case 11:
		case 12:
		case 13:
			pokemart(Shop_Unique_ZhuLi_11to14)
		case 15:
		case 16:
		case 17:
		case 18:
		case 20:
			pokemart(Shop_Unique_ZhuLi_15to20)
		case 21:
		case 22:
		case 23:
			pokemart(Shop_Unique_ZhuLi_21to23)
		case 24:
		case 25:
		case 26:
			pokemart(Shop_Unique_ZhuLi_24to30)
	}
	msgbox(gText_ZhuLi_Leave, MSGBOX_DEFAULT)
	release
}


mart Shop_Unique_ZhuLi_11to14 {
	ITEM_HEAL_BALL
	ITEM_NET_BALL
	ITEM_DIVE_BALL
	ITEM_NEST_BALL
	ITEM_REPEAT_BALL
	ITEM_RED_NECTAR
	ITEM_YELLOW_NECTAR
	ITEM_PINK_NECTAR
	ITEM_PURPLE_NECTAR
}

mart Shop_Unique_ZhuLi_15to20 {
	ITEM_HEAL_BALL
	ITEM_NET_BALL
	ITEM_DIVE_BALL
	ITEM_NEST_BALL
	ITEM_REPEAT_BALL
	ITEM_WATER_STONE
	ITEM_THUNDER_STONE
	ITEM_FIRE_STONE
	ITEM_SUN_STONE
	ITEM_MOON_STONE
	ITEM_LEAF_STONE
	ITEM_ICE_STONE
	ITEM_SHINY_STONE
	ITEM_DUSK_STONE
	ITEM_DAWN_STONE
	ITEM_OVAL_STONE
	ITEM_WHIPPED_DREAM
	ITEM_TART_APPLE
	ITEM_SWEET_APPLE
	ITEM_RED_NECTAR
	ITEM_YELLOW_NECTAR
	ITEM_PINK_NECTAR
	ITEM_PURPLE_NECTAR
}

mart Shop_Unique_ZhuLi_21to23 {
	ITEM_HEAL_BALL
	ITEM_NET_BALL
	ITEM_DIVE_BALL
	ITEM_NEST_BALL
	ITEM_REPEAT_BALL
	ITEM_WATER_STONE
	ITEM_THUNDER_STONE
	ITEM_FIRE_STONE
	ITEM_SUN_STONE
	ITEM_MOON_STONE
	ITEM_LEAF_STONE
	ITEM_ICE_STONE
	ITEM_SHINY_STONE
	ITEM_DUSK_STONE
	ITEM_DAWN_STONE
	ITEM_OVAL_STONE
	ITEM_PRISM_SCALE
	ITEM_DEEP_SEA_SCALE
	ITEM_DEEP_SEA_TOOTH
	ITEM_KINGS_ROCK
	ITEM_GALARICA_CUFF
	ITEM_GALARICA_WREATH
	ITEM_CRACKED_POT
	ITEM_UPGRADE
	ITEM_WHIPPED_DREAM
	ITEM_TART_APPLE
	ITEM_SWEET_APPLE
	ITEM_RED_NECTAR
	ITEM_YELLOW_NECTAR
	ITEM_PINK_NECTAR
	ITEM_PURPLE_NECTAR
}
mart Shop_Unique_ZhuLi_24to30 {
	ITEM_HEAL_BALL
	ITEM_NET_BALL
	ITEM_DIVE_BALL
	ITEM_NEST_BALL
	ITEM_REPEAT_BALL
	ITEM_WATER_STONE
	ITEM_THUNDER_STONE
	ITEM_FIRE_STONE
	ITEM_SUN_STONE
	ITEM_MOON_STONE
	ITEM_LEAF_STONE
	ITEM_ICE_STONE
	ITEM_SHINY_STONE
	ITEM_DUSK_STONE
	ITEM_DAWN_STONE
	ITEM_OVAL_STONE
	ITEM_PROTECTOR
	ITEM_DRAGON_SCALE
	ITEM_ELECTIRIZER
	ITEM_MAGMARIZER
	ITEM_REAPER_CLOTH
	ITEM_RAZOR_FANG
	ITEM_RAZOR_CLAW
	ITEM_DUBIOUS_DISC
	ITEM_PRISM_SCALE
	ITEM_DEEP_SEA_SCALE
	ITEM_DEEP_SEA_TOOTH
	ITEM_KINGS_ROCK
	ITEM_GALARICA_CUFF
	ITEM_GALARICA_WREATH
	ITEM_CRACKED_POT
	ITEM_UPGRADE
	ITEM_WHIPPED_DREAM
	ITEM_TART_APPLE
	ITEM_SWEET_APPLE
	ITEM_RED_NECTAR
	ITEM_YELLOW_NECTAR
	ITEM_PINK_NECTAR
	ITEM_PURPLE_NECTAR
}

script EventScript_Shop_ZhuLiIntro {
	lockall
	applymovement(2, Common_Movement_ExclamationMark)
	applymovement(5, Common_Movement_ExclamationMark)
	playse(SE_PIN)
	waitmovement(0)
	waitse
	getplayerxy(VAR_TEMP_0, VAR_TEMP_1)
	if (var(VAR_TEMP_0) == 20) {
		applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkUp)
		waitmovement(0)
		applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkLeft)
		waitmovement(0)
	}
	applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkUp)
	waitmovement(0)
	applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkUp)
	waitmovement(0)
	msgbox(gText_Varrick_ZhuLiIntro1)
	msgbox(gText_ZhuLi_ZhuLiIntro1)
	playse(SE_APPLAUSE)
	waitse
	msgbox(gText_Varrick_ZhuLiIntro2)
	msgbox(gText_ZhuLi_ZhuLiIntro2)
	msgbox(gText_Varrick_ZhuLiIntro3)
	setvar(VAR_ZHULI_INTRO, 1)
	setflag(FLAG_VARRICK_INTRO)
	releaseall
}

script EventScript_Shop_Lelouch {
	lock
	faceplayer
	if (flag(FLAG_LELOUCH_INTRO) == false) {
		msgbox(gText_Lelouch_Intro1)
		delay(96)
		msgbox(gText_Lelouch_Intro2)
		setflag(FLAG_LELOUCH_INTRO)
	}
	if (var(VAR_ZONE) < 6) {
		msgbox(gText_Lelouch_NoShards)
		release
		end
	}
	if (flag(FLAG_LELOUCH_SHARDS) == false) {
		msgbox(gText_Lelouch_ExplainShards)
		setflag(FLAG_LELOUCH_SHARDS)
	}
	msgbox(gText_Lelouch_Welcome, MSGBOX_DEFAULT)
	multichoice(0, 0, MULTI_LELOUCH_OPTIONS, 0)
	switch (var(VAR_RESULT)) {
		case 0:
			call(EventScript_Shop_Lelouch_Training)
		case 1:
			call(EventScript_Shop_Lelouch_MoveReminder)
		case 2:
			call(EventScript_Shop_Lelouch_MoveTutor)
		case 3:
			call(EventScript_Shop_Lelouch_Other)
	}
	msgbox(gText_Lelouch_Leave)
	release
}

script EventScript_Shop_Lelouch_Training {
	checkitem(ITEM_RED_SHARD, 1)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(gText_Lelouch_NotEnoughColor)
		return
	}
	msgbox(gText_Lelouch_ChooseTraining, MSGBOX_DEFAULT)
	switch (var(VAR_ZONE)) {
		case 6:
		case 7:
		case 9:
		case 10:
		case 11:
		case 12:
		case 13:
		case 15:
		case 16:
		case 17:
		case 18:
		case 20:
			multichoice(0, 0, MULTI_LELOUCH_TRAINING, 0)
			switch(var(VAR_RESULT)) {
				case 0:
					msgbox(gText_Lelouch_Exp, MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						special(ChoosePartyMonForTraining)
						waitstate
						if (var(VAR_0x8004) == 1) {
							msgbox(gText_Lelouch_ExpTrainingFinished)
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
						} else {
							msgbox(gText_Lelouch_DidNotExpTrain)
						}
						return
					}
			}
		case 21:
		case 22:
		case 23:
		case 24:
		case 25:
			if (flag(FLAG_BRUTAL_MODE_ON) == true) {
				multichoice(0, 0, MULTI_LELOUCH_TRAINING3, 0)
				switch(var(VAR_RESULT)) {
					case 0:
						msgbox(gText_Lelouch_Exp, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP1, gText_LelouchDefeated)
							return
						}
					case 1:
						msgbox(gText_Lelouch_Exp2, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP2, gText_LelouchDefeated)
							return
						}
					case 2:
						msgbox(gText_Lelouch_Exp3, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP3, gText_LelouchDefeated)
							return
						}
				}
			} else {
				scrollingmultichoice(6, 0, 0, 5, TRUE)
				switch(var(VAR_RESULT)) {
					case 0:
						msgbox(gText_Lelouch_Exp, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP1, gText_LelouchDefeated)
							return
						}
					case 1:
						msgbox(gText_Lelouch_Exp2, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP2, gText_LelouchDefeated)
							return
						}
					case 2:
						msgbox(gText_Lelouch_Exp3, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP3, gText_LelouchDefeated)
							return
						}
					case 3:
						msgbox(gText_Lelouch_EV_HP, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVHP, gText_LelouchDefeated)
							return
						}
					case 4:
						msgbox(gText_Lelouch_EV_Atk, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVATK, gText_LelouchDefeated)
							return
						}
					case 5:
						msgbox(gText_Lelouch_EV_Def, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVDEF, gText_LelouchDefeated)
							return
						}
					case 6:
						msgbox(gText_Lelouch_EV_SpA, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVSPA, gText_LelouchDefeated)
							return
						}
					case 7:
						msgbox(gText_Lelouch_EV_SpD, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVSPD, gText_LelouchDefeated)
							return
						}
					case 8:
						msgbox(gText_Lelouch_EV_Spe, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVSPE, gText_LelouchDefeated)
							return
						}
				}
			}
		case 26:
			if (flag(FLAG_BRUTAL_MODE_ON) == true) {
				multichoice(0, 0, MULTI_LELOUCH_TRAINING4, 0)
				switch(var(VAR_RESULT)) {
					case 0:
						msgbox(gText_Lelouch_Exp, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP1, gText_LelouchDefeated)
							return
						}
					case 1:
						msgbox(gText_Lelouch_Exp2, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP2, gText_LelouchDefeated)
							return
						}
					case 2:
						msgbox(gText_Lelouch_Exp3, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP3, gText_LelouchDefeated)
							return
						}
					case 3:
						msgbox(gText_Lelouch_Exp4, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP4, gText_LelouchDefeated)
							return
						}
				}
			} else {
				scrollingmultichoice(7, 0, 0, 5, TRUE)
				switch(var(VAR_RESULT)) {
					case 0:
						msgbox(gText_Lelouch_Exp, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP1, gText_LelouchDefeated)
							return
						}
					case 1:
						msgbox(gText_Lelouch_Exp2, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP2, gText_LelouchDefeated)
							return
						}
					case 2:
						msgbox(gText_Lelouch_Exp3, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP3, gText_LelouchDefeated)
							return
						}
					case 3:
						msgbox(gText_Lelouch_Exp4, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEXP4, gText_LelouchDefeated)
							return
						}
					case 4:
						msgbox(gText_Lelouch_EV_HP, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVHP, gText_LelouchDefeated)
							return
						}
					case 5:
						msgbox(gText_Lelouch_EV_Atk, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVATK, gText_LelouchDefeated)
							return
						}
					case 6:
						msgbox(gText_Lelouch_EV_Def, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVDEF, gText_LelouchDefeated)
							return
						}
					case 7:
						msgbox(gText_Lelouch_EV_SpA, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVSPA, gText_LelouchDefeated)
							return
						}
					case 8:
						msgbox(gText_Lelouch_EV_SpD, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVSPD, gText_LelouchDefeated)
							return
						}
					case 9:
						msgbox(gText_Lelouch_EV_Spe, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							msgbox(gText_Lelouch_PayRed)
							removeitem(ITEM_RED_SHARD, 1)
							trainerbattle_no_intro(TRAINER_LELOUCHEVSPE, gText_LelouchDefeated)
							return
						}
				}
			}
	}
	return
}

script EventScript_Shop_Lelouch_MoveReminder {
	checkitem(ITEM_BLUE_SHARD, 1)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(gText_Lelouch_NotEnoughColor)
		return
	}
	msgbox(gText_Lelouch_CostsBlueShards, MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		return
	}
	while {
		msgbox(gText_Lelouch_RemindWhichMon, MSGBOX_DEFAULT)
		special(ChooseMonForMoveRelearner)
		waitstate
		if (var(VAR_0x8004) == 255) {
			return
		}
		special(IsSelectedMonEgg)
		if (var(VAR_RESULT) == TRUE) {
			msgbox(gText_Lelouch_CantRemindEgg, MSGBOX_DEFAULT)
			continue
		}
		if (var(VAR_0x8005) == 0) {
			msgbox(gText_Lelouch_CantRemindMon, MSGBOX_DEFAULT)
			continue
		}
		msgbox(gText_Lelouch_RemindWhichMove, MSGBOX_DEFAULT)
		special(TeachMoveRelearnerMove)
		waitstate
		if (var(VAR_0x8004) == 0) {
			continue
		}
		msgbox(gText_Lelouch_PayBlue)
		removeitem(ITEM_BLUE_SHARD)
		break
	}
	return
}

script EventScript_Shop_Lelouch_MoveTutor {
	checkitem(ITEM_YELLOW_SHARD, 1)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(gText_Lelouch_NotEnoughColor)
		return
	}
	while {
		msgbox(gText_Lelouch_CostsYellowShards, MSGBOX_DEFAULT)
		if (var(VAR_ZONE) > 30) {
			scrollingmultichoice(5, 0, 0, 5, TRUE)
			switch (var(VAR_RESULT)) {
				case 0:
					setvar(VAR_TEMP_0, MOVE_ICY_WIND)
					setvar(VAR_0x8005, TUTOR_MOVE_ICY_WIND)
				case 1:
					setvar(VAR_TEMP_0, MOVE_GRASS_KNOT)
					setvar(VAR_0x8005, TUTOR_MOVE_GRASS_KNOT)
				case 2:
					setvar(VAR_TEMP_0, MOVE_LOW_KICK)
					setvar(VAR_0x8005, TUTOR_MOVE_LOW_KICK)
				case 3:
					setvar(VAR_TEMP_0, MOVE_HEAL_BELL)
					setvar(VAR_0x8005, TUTOR_MOVE_HEAL_BELL)
				case 4:
					setvar(VAR_TEMP_0, MOVE_HELPING_HAND)
					setvar(VAR_0x8005, TUTOR_MOVE_HELPING_HAND)
				case 5:
					setvar(VAR_TEMP_0, MOVE_SLEEP_TALK)
					setvar(VAR_0x8005, TUTOR_MOVE_SLEEP_TALK)
				case 6:
					setvar(VAR_TEMP_0, MOVE_STEALTH_ROCK)
					setvar(VAR_0x8005, TUTOR_MOVE_STEALTH_ROCK)
				case 7:
					setvar(VAR_TEMP_0, MOVE_TAUNT)
					setvar(VAR_0x8005, TUTOR_MOVE_TAUNT)
				case 8:
					setvar(VAR_TEMP_0, MOVE_FIRE_PUNCH)
					setvar(VAR_0x8005, TUTOR_MOVE_FIRE_PUNCH)
				case 9:
					setvar(VAR_TEMP_0, MOVE_ICE_PUNCH)
					setvar(VAR_0x8005, TUTOR_MOVE_ICE_PUNCH)
				case 10:
					setvar(VAR_TEMP_0, MOVE_THUNDER_PUNCH)
					setvar(VAR_0x8005, TUTOR_MOVE_THUNDER_PUNCH)
				case 11:
					setvar(VAR_TEMP_0, MOVE_FLIP_TURN)
					setvar(VAR_0x8005, TUTOR_MOVE_FLIP_TURN)
				case 12:
					setvar(VAR_TEMP_0, MOVE_U_TURN)
					setvar(VAR_0x8005, TUTOR_MOVE_U_TURN)
				case 13:
					setvar(VAR_TEMP_0, MOVE_DEFOG)
					setvar(VAR_0x8005, TUTOR_MOVE_DEFOG)
				case 14:
					setvar(VAR_TEMP_0, MOVE_PAIN_SPLIT)
					setvar(VAR_0x8005, TUTOR_MOVE_PAIN_SPLIT)
				case 15:
					setvar(VAR_TEMP_0, MOVE_TRICK)
					setvar(VAR_0x8005, TUTOR_MOVE_TRICK)
				case 16:
					setvar(VAR_TEMP_0, MOVE_BOUNCE)
					setvar(VAR_0x8005, TUTOR_MOVE_BOUNCE)
				case 17:
					setvar(VAR_TEMP_0, MOVE_IRON_HEAD)
					setvar(VAR_0x8005, TUTOR_MOVE_IRON_HEAD)
				case 18:
					setvar(VAR_TEMP_0, MOVE_KNOCK_OFF)
					setvar(VAR_0x8005, TUTOR_MOVE_KNOCK_OFF)
				case 19:
					setvar(VAR_TEMP_0, MOVE_VOLT_SWITCH)
					setvar(VAR_0x8005, TUTOR_MOVE_VOLT_SWITCH)
				case 20:
					setvar(VAR_TEMP_0, MOVE_ZEN_HEADBUTT)
					setvar(VAR_0x8005, TUTOR_MOVE_ZEN_HEADBUTT)
				case 21:
					setvar(VAR_TEMP_0, MOVE_ROOST)
					setvar(VAR_0x8005, TUTOR_MOVE_ROOST)
				case 22:
					setvar(VAR_TEMP_0, MOVE_SYNTHESIS)
					setvar(VAR_0x8005, TUTOR_MOVE_SYNTHESIS)
				case 23:
					setvar(VAR_TEMP_0, MOVE_TAILWIND)
					setvar(VAR_0x8005, TUTOR_MOVE_TAILWIND)
				case 24:
					setvar(VAR_TEMP_0, MOVE_DRACO_METEOR)
					setvar(VAR_0x8005, TUTOR_MOVE_DRACO_METEOR)
				case 25:
					setvar(VAR_TEMP_0, MOVE_EXPANDING_FORCE)
					setvar(VAR_0x8005, TUTOR_MOVE_EXPANDING_FORCE)
				case 26:
					setvar(VAR_TEMP_0, MOVE_HEAT_WAVE)
					setvar(VAR_0x8005, TUTOR_MOVE_HEAT_WAVE)
				case 27:
					setvar(VAR_TEMP_0, MOVE_POLTERGEIST)
					setvar(VAR_0x8005, TUTOR_MOVE_POLTERGEIST)
				case 28:
					setvar(VAR_TEMP_0, MOVE_POWER_WHIP)
					setvar(VAR_0x8005, TUTOR_MOVE_POWER_WHIP)
				case 29:
					setvar(VAR_TEMP_0, MOVE_SUPERPOWER)
					setvar(VAR_0x8005, TUTOR_MOVE_SUPERPOWER)
				case 30:
					setvar(VAR_TEMP_0, MOVE_SWORDS_DANCE)
					setvar(VAR_0x8005, TUTOR_MOVE_SWORDS_DANCE)
				case 31:
					setvar(VAR_TEMP_0, MOVE_NASTY_PLOT)
					setvar(VAR_0x8005, TUTOR_MOVE_NASTY_PLOT)
				case MULTI_B_PRESSED:
					return
			}
		} elif (var(VAR_ZONE) > 20) {
			scrollingmultichoice(4, 0, 0, 5, TRUE)
			switch (var(VAR_RESULT)) {
				case 0:
					setvar(VAR_TEMP_0, MOVE_ICY_WIND)
					setvar(VAR_0x8005, TUTOR_MOVE_ICY_WIND)
				case 1:
					setvar(VAR_TEMP_0, MOVE_GRASS_KNOT)
					setvar(VAR_0x8005, TUTOR_MOVE_GRASS_KNOT)
				case 2:
					setvar(VAR_TEMP_0, MOVE_LOW_KICK)
					setvar(VAR_0x8005, TUTOR_MOVE_LOW_KICK)
				case 3:
					setvar(VAR_TEMP_0, MOVE_HEAL_BELL)
					setvar(VAR_0x8005, TUTOR_MOVE_HEAL_BELL)
				case 4:
					setvar(VAR_TEMP_0, MOVE_HELPING_HAND)
					setvar(VAR_0x8005, TUTOR_MOVE_HELPING_HAND)
				case 5:
					setvar(VAR_TEMP_0, MOVE_SLEEP_TALK)
					setvar(VAR_0x8005, TUTOR_MOVE_SLEEP_TALK)
				case 6:
					setvar(VAR_TEMP_0, MOVE_STEALTH_ROCK)
					setvar(VAR_0x8005, TUTOR_MOVE_STEALTH_ROCK)
				case 7:
					setvar(VAR_TEMP_0, MOVE_TAUNT)
					setvar(VAR_0x8005, TUTOR_MOVE_TAUNT)
				case 8:
					setvar(VAR_TEMP_0, MOVE_FIRE_PUNCH)
					setvar(VAR_0x8005, TUTOR_MOVE_FIRE_PUNCH)
				case 9:
					setvar(VAR_TEMP_0, MOVE_ICE_PUNCH)
					setvar(VAR_0x8005, TUTOR_MOVE_ICE_PUNCH)
				case 10:
					setvar(VAR_TEMP_0, MOVE_THUNDER_PUNCH)
					setvar(VAR_0x8005, TUTOR_MOVE_THUNDER_PUNCH)
				case 11:
					setvar(VAR_TEMP_0, MOVE_FLIP_TURN)
					setvar(VAR_0x8005, TUTOR_MOVE_FLIP_TURN)
				case 12:
					setvar(VAR_TEMP_0, MOVE_U_TURN)
					setvar(VAR_0x8005, TUTOR_MOVE_U_TURN)
				case 13:
					setvar(VAR_TEMP_0, MOVE_DEFOG)
					setvar(VAR_0x8005, TUTOR_MOVE_DEFOG)
				case 14:
					setvar(VAR_TEMP_0, MOVE_PAIN_SPLIT)
					setvar(VAR_0x8005, TUTOR_MOVE_PAIN_SPLIT)
				case 15:
					setvar(VAR_TEMP_0, MOVE_TRICK)
					setvar(VAR_0x8005, TUTOR_MOVE_TRICK)
				case 16:
					setvar(VAR_TEMP_0, MOVE_BOUNCE)
					setvar(VAR_0x8005, TUTOR_MOVE_BOUNCE)
				case 17:
					setvar(VAR_TEMP_0, MOVE_IRON_HEAD)
					setvar(VAR_0x8005, TUTOR_MOVE_IRON_HEAD)
				case 18:
					setvar(VAR_TEMP_0, MOVE_KNOCK_OFF)
					setvar(VAR_0x8005, TUTOR_MOVE_KNOCK_OFF)
				case 19:
					setvar(VAR_TEMP_0, MOVE_VOLT_SWITCH)
					setvar(VAR_0x8005, TUTOR_MOVE_VOLT_SWITCH)
				case 20:
					setvar(VAR_TEMP_0, MOVE_ZEN_HEADBUTT)
					setvar(VAR_0x8005, TUTOR_MOVE_ZEN_HEADBUTT)
				case 21:
					setvar(VAR_TEMP_0, MOVE_ROOST)
					setvar(VAR_0x8005, TUTOR_MOVE_ROOST)
				case 22:
					setvar(VAR_TEMP_0, MOVE_SYNTHESIS)
					setvar(VAR_0x8005, TUTOR_MOVE_SYNTHESIS)
				case 23:
					setvar(VAR_TEMP_0, MOVE_TAILWIND)
					setvar(VAR_0x8005, TUTOR_MOVE_TAILWIND)
				case MULTI_B_PRESSED:
					return
			}
		} elif (var(VAR_ZONE) > 15) {
			scrollingmultichoice(3, 0, 0, 5, TRUE)
			switch (var(VAR_RESULT)) {
				case 0:
					setvar(VAR_TEMP_0, MOVE_ICY_WIND)
					setvar(VAR_0x8005, TUTOR_MOVE_ICY_WIND)
				case 1:
					setvar(VAR_TEMP_0, MOVE_GRASS_KNOT)
					setvar(VAR_0x8005, TUTOR_MOVE_GRASS_KNOT)
				case 2:
					setvar(VAR_TEMP_0, MOVE_LOW_KICK)
					setvar(VAR_0x8005, TUTOR_MOVE_LOW_KICK)
				case 3:
					setvar(VAR_TEMP_0, MOVE_HEAL_BELL)
					setvar(VAR_0x8005, TUTOR_MOVE_HEAL_BELL)
				case 4:
					setvar(VAR_TEMP_0, MOVE_HELPING_HAND)
					setvar(VAR_0x8005, TUTOR_MOVE_HELPING_HAND)
				case 5:
					setvar(VAR_TEMP_0, MOVE_SLEEP_TALK)
					setvar(VAR_0x8005, TUTOR_MOVE_SLEEP_TALK)
				case 6:
					setvar(VAR_TEMP_0, MOVE_STEALTH_ROCK)
					setvar(VAR_0x8005, TUTOR_MOVE_STEALTH_ROCK)
				case 7:
					setvar(VAR_TEMP_0, MOVE_TAUNT)
					setvar(VAR_0x8005, TUTOR_MOVE_TAUNT)
				case 8:
					setvar(VAR_TEMP_0, MOVE_FIRE_PUNCH)
					setvar(VAR_0x8005, TUTOR_MOVE_FIRE_PUNCH)
				case 9:
					setvar(VAR_TEMP_0, MOVE_ICE_PUNCH)
					setvar(VAR_0x8005, TUTOR_MOVE_ICE_PUNCH)
				case 10:
					setvar(VAR_TEMP_0, MOVE_THUNDER_PUNCH)
					setvar(VAR_0x8005, TUTOR_MOVE_THUNDER_PUNCH)
				case 11:
					setvar(VAR_TEMP_0, MOVE_FLIP_TURN)
					setvar(VAR_0x8005, TUTOR_MOVE_FLIP_TURN)
				case 12:
					setvar(VAR_TEMP_0, MOVE_U_TURN)
					setvar(VAR_0x8005, TUTOR_MOVE_U_TURN)
				case 13:
					setvar(VAR_TEMP_0, MOVE_DEFOG)
					setvar(VAR_0x8005, TUTOR_MOVE_DEFOG)
				case 14:
					setvar(VAR_TEMP_0, MOVE_PAIN_SPLIT)
					setvar(VAR_0x8005, TUTOR_MOVE_PAIN_SPLIT)
				case 15:
					setvar(VAR_TEMP_0, MOVE_TRICK)
					setvar(VAR_0x8005, TUTOR_MOVE_TRICK)
				case MULTI_B_PRESSED:
					return
			}
		} else {
			scrollingmultichoice(2, 0, 0, 5, TRUE)
			switch (var(VAR_RESULT)) {
				case 0:
					setvar(VAR_TEMP_0, MOVE_ICY_WIND)
					setvar(VAR_0x8005, TUTOR_MOVE_ICY_WIND)
				case 1:
					setvar(VAR_TEMP_0, MOVE_GRASS_KNOT)
					setvar(VAR_0x8005, TUTOR_MOVE_GRASS_KNOT)
				case 2:
					setvar(VAR_TEMP_0, MOVE_LOW_KICK)
					setvar(VAR_0x8005, TUTOR_MOVE_LOW_KICK)
				case 3:
					setvar(VAR_TEMP_0, MOVE_HEAL_BELL)
					setvar(VAR_0x8005, TUTOR_MOVE_HEAL_BELL)
				case 4:
					setvar(VAR_TEMP_0, MOVE_HELPING_HAND)
					setvar(VAR_0x8005, TUTOR_MOVE_HELPING_HAND)
				case 5:
					setvar(VAR_TEMP_0, MOVE_SLEEP_TALK)
					setvar(VAR_0x8005, TUTOR_MOVE_SLEEP_TALK)
				case 6:
					setvar(VAR_TEMP_0, MOVE_STEALTH_ROCK)
					setvar(VAR_0x8005, TUTOR_MOVE_STEALTH_ROCK)
				case 7:
					setvar(VAR_TEMP_0, MOVE_TAUNT)
					setvar(VAR_0x8005, TUTOR_MOVE_TAUNT)
				case MULTI_B_PRESSED:
					return
			}
		}
		buffermovename(0, VAR_TEMP_0)
		msgbox(gText_TutorMove, MSGBOX_YESNO)
		if (var(VAR_RESULT) == NO) {
			continue
		}
		msgbox(gText_TutorWhichMon, MSGBOX_DEFAULT)
		// setvar(VAR_0x8005, VAR_TEMP_1)
		call(MoveTutor_EventScript_OpenPartyMenu)
		if (var(VAR_RESULT) == 0) {
			return
		}
		msgbox(gText_Lelouch_PayYellow1, MSGBOX_DEFAULT)
		removeitem(ITEM_YELLOW_SHARD)
		return
	}

}

script EventScript_Shop_Lelouch_Other {
	checkitem(ITEM_GREEN_SHARD, 1)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(gText_Lelouch_NotEnoughColor)
		return
	}
	msgbox(gText_Lelouch_CostsGreenShards, MSGBOX_DEFAULT)
	scrollingmultichoice(8, 0, 0, 5, TRUE)
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, ITEM_LONELY_MINT)
		case 1:
			setvar(VAR_TEMP_0, ITEM_ADAMANT_MINT)
		case 2:
			setvar(VAR_TEMP_0, ITEM_NAUGHTY_MINT)
		case 3:
			setvar(VAR_TEMP_0, ITEM_BRAVE_MINT)
		case 4:
			setvar(VAR_TEMP_0, ITEM_BOLD_MINT)
		case 5:
			setvar(VAR_TEMP_0, ITEM_IMPISH_MINT)
		case 6:
			setvar(VAR_TEMP_0, ITEM_LAX_MINT)
		case 7:
			setvar(VAR_TEMP_0, ITEM_RELAXED_MINT)
		case 8:
			setvar(VAR_TEMP_0, ITEM_MODEST_MINT)
		case 9:
			setvar(VAR_TEMP_0, ITEM_MILD_MINT)
		case 10:
			setvar(VAR_TEMP_0, ITEM_RASH_MINT)
		case 11:
			setvar(VAR_TEMP_0, ITEM_QUIET_MINT)
		case 12:
			setvar(VAR_TEMP_0, ITEM_CALM_MINT)
		case 13:
			setvar(VAR_TEMP_0, ITEM_GENTLE_MINT)
		case 14:
			setvar(VAR_TEMP_0, ITEM_CAREFUL_MINT)
		case 15:
			setvar(VAR_TEMP_0, ITEM_SASSY_MINT)
		case 16:
			setvar(VAR_TEMP_0, ITEM_TIMID_MINT)
		case 17:
			setvar(VAR_TEMP_0, ITEM_HASTY_MINT)
		case 18:
			setvar(VAR_TEMP_0, ITEM_JOLLY_MINT)
		case 19:
			setvar(VAR_TEMP_0, ITEM_NAIVE_MINT)
		case 20:
			setvar(VAR_TEMP_0, ITEM_SERIOUS_MINT)
		case MULTI_B_PRESSED:
			return
	}
	bufferitemname(0, VAR_TEMP_0)
	msgbox(gText_Lelouch_MintCosts, MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		return
	}
	removeitem(ITEM_GREEN_SHARD, 1)
	msgbox(gText_Lelouch_PayGreen)
	msgbox(gText_Lelouch_OneMoment)
	fadescreenswapbuffers(FADE_TO_BLACK)
	delay(96)
	playfanfare(MUS_SLOTS_WIN)
	waitfanfare
	fadescreenswapbuffers(FADE_FROM_BLACK)
	msgbox(gText_Lelouch_ItsDone)
	giveitem(VAR_TEMP_0)
	return
}


script EventScript_Shop_Joy {
	lock
	faceplayer
	if (flag(FLAG_JOY_INTRO) == false) {
		setflag(FLAG_JOY_INTRO)
		msgbox(gText_Joy_Intro)
	}
	msgbox(gText_Joy_Welcome)
	showmoneybox(0, 0, 0)
	msgbox(gText_Joy_WouldYouLikeToHeal, MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		closemessage
		hidemoneybox
		msgbox(gText_Joy_WonderfulDay)
		release
		end
	}
	checkmoney(1000, 0)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(gText_Joy_NotEnough)
		hidemoneybox
		msgbox(gText_Joy_WonderfulDay)
		release
		end
	}
	removemoney(1000, 0)
	updatemoneybox
	msgbox(gText_Joy_ThankYou)
	fadescreen(FADE_TO_BLACK)
	playfanfare(MUS_HEAL)
	waitfanfare
	special(HealPlayerParty)
	fadescreen(FADE_FROM_BLACK)
	msgbox(gText_Joy_PartyHealed)
	closemessage
	hidemoneybox
	msgbox(gText_Joy_WonderfulDay)
	releaseall
}

script EventScript_BrutalExitNotSatisfied {
	msgbox(gText_BrutalExitNotSatisfied)
	applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkDown)
	waitmovement(0)
	releaseall
}

script EventScript_Max {
	lock
	faceplayer
	if (flag(FLAG_MAX_INTRO) == false) {
		msgbox(format("{COLOR BLUE}???{COLOR DARK_GRAY}: By my calculations, you should be {PLAYER}!\pHi, {PLAYER}! My name is {COLOR BLUE}Max{COLOR DARK_GRAY}."))
		msgbox(format("{COLOR BLUE}Max{COLOR DARK_GRAY}: I am a traveling merchant, selling special Technical Machines for you to use!\pI travel a lot, never going to the same place again.\pI'll have different wares every time you see me, so be sure to buy whatever TMs you deem important!"))
		setflag(FLAG_MAX_INTRO)
	}
	message(format("{COLOR BLUE}Max{COLOR DARK_GRAY}: Hi {PLAYER}! Long time no see!\pWelcome to my TM shop!"))
	waitmessage
	switch(var(VAR_ZONE)) {
		case 3:
			pokemart(Zone3A_Shop_TMShop)
		case 6:
			pokemart(Zone6A_Shop_TMShop)
		case 7:
			pokemart(Zone7A_Shop_TMShop)
	}
	msgbox(format("{COLOR BLUE}Max{COLOR DARK_GRAY}: Goodbye!"))
	release
}

mart Zone3A_Shop_TMShop {
	ITEM_TM01
}

mart Zone6A_Shop_TMShop {
	ITEM_TM05
	ITEM_TM06
}

mart Zone7A_Shop_TMShop {
	ITEM_TM09
	ITEM_TM10
	ITEM_TM11
}

script EventScript_LeavingSetup {
	setflag(FLAG_IN_ZONE_NOT_SANCTUARY)
	msgbox(gText_Colress_Empower)
	getplayerxy(VAR_TEMP_0, VAR_TEMP_1)
	if (var(VAR_TEMP_0) == 21) {
		applymovement(1, Common_Movement_WalkRight)
		applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkRight)
		waitmovement(0)
		applymovement(1, Common_Movement_FaceLeft)
		waitmovement(0)
	}
	if (var(VAR_TEMP_0) == 22) {
		applymovement(1, Common_Movement_WalkLeft)
		applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkUp)
		waitmovement(0)
		applymovement(1, Common_Movement_FaceRight)
		waitmovement(0)
	}
	if (var(VAR_TEMP_0) == 23) {
		applymovement(1, Common_Movement_WalkLeft)
		applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkLeft)
		waitmovement(0)
		applymovement(1, Common_Movement_FaceRight)
		waitmovement(0)
	}
	applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkUp)
	waitmovement(0)
	return
}

script EventScript_WhenUReady {
	if (var(VAR_ZONE) == 7) {
		msgbox(Zone6Sanctuary_Text_Colress_WhenUReady)
		release
	} elif (var(VAR_ZONE) == 13) {
		goto(Zone12Sanctuary_EventScript_WhenUReady)
	} elif (var(VAR_ZONE) == 18) {
		goto(Zone17Sanctuary_EventScript_WhenUReady)
	} elif (var(VAR_ZONE) == 24) {
		goto(Zone23Sanctuary_EventScript_WhenUReady)
	} else {
		buffernumberstring(0, VAR_ZONE)
		msgbox(gText_Colress_WhenUReady, MSGBOX_AUTOCLOSE)
		release
	}
}

script EventScript_SanctuaryToZone0 {
	lockall
	setflag(FLAG_IN_ZONE_NOT_SANCTUARY)
	warpteleport(MAP_ZONE0A, 255, 17, 10)
	waitstate
}

script EventScript_Documentation {
	msgbox(gText_Version)
	goto(EventScript_WhenUReady)
}

script EventScript_Settings {
	while {
		if ((flag(FLAG_BRUTAL_MODE_ON) == true) && (flag(FLAG_NUZLOCKE_ON) == true) && (flag(FLAG_RANDOMIZER_ON) == true)) {
			msgbox(gText_Colress_BrutalNuzlockeRandomizerMsg, MSGBOX_DEFAULT)
			multichoice(21, 0, MULTI_COLRESS_SETTINGS, FALSE)
			switch (var(VAR_RESULT)) {
				case 0:
					msgbox(Zone0Sanctuary_Text_Colress_BrutalExplained)
					msgbox(gText_Colress_WouldTurnOffBrutal, MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						msgbox(gText_Colress_SureTurnOffBrutal, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							playse(SE_PC_OFF)
							msgbox(gText_Colress_BrutalOff, MSGBOX_DEFAULT)
							waitse
							closemessage
							clearflag(FLAG_BRUTAL_MODE_ON)
							clearflag(FLAG_SMART_WILD_AI_ON)
							special(ReverseHiddenItemFlags)
						}
					}
				case 1:
					msgbox(Zone0Sanctuary_Text_Colress_RandomizerExplanation)
					msgbox(Zone0Sanctuary_Text_Colress_NuzlockeExplained)
					msgbox(gText_Colress_WouldTurnOffNuzlocke, MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						msgbox(gText_Colress_SureTurnOffNuzlocke, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							playse(SE_PC_OFF)
							msgbox(gText_Colress_NuzlockeOffRandomizer, MSGBOX_DEFAULT)
							waitse
							closemessage
							clearflag(FLAG_NUZLOCKE_ON)
							clearflag(FLAG_NUZLOCKE_FOSSIL_RECEIVED)
							callnative(GlobalNuzlockeClear)
						}
					}
				case 2:
					call(EventScript_MusicMenu)
				case 3:
					call(EventScript_ExpAll)
				case 4:
				case MULTI_B_PRESSED:
					goto(EventScript_WhenUReady)
			}
		} elif ((flag(FLAG_BRUTAL_MODE_ON) == false) && (flag(FLAG_NUZLOCKE_ON) == true) && (flag(FLAG_RANDOMIZER_ON) == true)) {
			msgbox(gText_Colress_DefaultNuzlockeRandomizerMsg, MSGBOX_DEFAULT)
			multichoice(21, 0, MULTI_COLRESS_SETTINGS, FALSE)
			switch (var(VAR_RESULT)) {
				case 0:
					msgbox(Zone0Sanctuary_Text_Colress_DefaultExplained)
				case 1:
					msgbox(Zone0Sanctuary_Text_Colress_RandomizerExplanation)
					msgbox(Zone0Sanctuary_Text_Colress_NuzlockeExplained)
					msgbox(gText_Colress_WouldTurnOffNuzlocke, MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						msgbox(gText_Colress_SureTurnOffNuzlocke, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							playse(SE_PC_OFF)
							msgbox(gText_Colress_NuzlockeOffRandomizer, MSGBOX_DEFAULT)
							waitse
							closemessage
							clearflag(FLAG_NUZLOCKE_ON)
							clearflag(FLAG_NUZLOCKE_FOSSIL_RECEIVED)
							callnative(GlobalNuzlockeClear)
						}
					}
				case 2:
					call(EventScript_MusicMenu)
				case 3:
					call(EventScript_ExpAll)
				case 4:
				case MULTI_B_PRESSED:
					goto(EventScript_WhenUReady)
			}
		} elif ((flag(FLAG_BRUTAL_MODE_ON) == true) && (flag(FLAG_NUZLOCKE_ON) == false) && (flag(FLAG_RANDOMIZER_ON) == true)) {
			msgbox(gText_Colress_BrutalRandomizerMsg, MSGBOX_DEFAULT)
			multichoice(21, 0, MULTI_COLRESS_SETTINGS, FALSE)
			switch (var(VAR_RESULT)) {
				case 0:
					msgbox(Zone0Sanctuary_Text_Colress_BrutalExplained)
					msgbox(gText_Colress_WouldTurnOffBrutal, MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						msgbox(gText_Colress_SureTurnOffBrutal, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							playse(SE_PC_OFF)
							msgbox(gText_Colress_BrutalOff, MSGBOX_DEFAULT)
							waitse
							closemessage
							clearflag(FLAG_BRUTAL_MODE_ON)
							clearflag(FLAG_SMART_WILD_AI_ON)
							special(ReverseHiddenItemFlags)
						}
					}
				case 1:
					msgbox(Zone0Sanctuary_Text_Colress_RandomizerExplanation)
				case 2:
					call(EventScript_MusicMenu)
				case 3:
					call(EventScript_ExpAll)
				case 4:
				case MULTI_B_PRESSED:
					goto(EventScript_WhenUReady)
			}
		} elif ((flag(FLAG_BRUTAL_MODE_ON) == false) && (flag(FLAG_NUZLOCKE_ON) == false) && (flag(FLAG_RANDOMIZER_ON) == true)) {
			msgbox(gText_Colress_DefaultRandomizerMsg, MSGBOX_DEFAULT)
			multichoice(21, 0, MULTI_COLRESS_SETTINGS, FALSE)
			switch (var(VAR_RESULT)) {
				case 0:
					msgbox(Zone0Sanctuary_Text_Colress_DefaultExplained)
				case 1:
					msgbox(Zone0Sanctuary_Text_Colress_RandomizerExplanation)
				case 2:
					call(EventScript_MusicMenu)
				case 3:
					call(EventScript_ExpAll)
				case 4:
				case MULTI_B_PRESSED:
					goto(EventScript_WhenUReady)
			}
		} elif ((flag(FLAG_BRUTAL_MODE_ON) == true) && (flag(FLAG_NUZLOCKE_ON) == true) && (flag(FLAG_RANDOMIZER_ON) == false)) {
			msgbox(gText_Colress_BrutalNuzlockeMsg, MSGBOX_DEFAULT)
			multichoice(21, 0, MULTI_COLRESS_SETTINGS, FALSE)
			switch (var(VAR_RESULT)) {
				case 0:
					msgbox(Zone0Sanctuary_Text_Colress_BrutalExplained)
					msgbox(gText_Colress_WouldTurnOffBrutal, MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						msgbox(gText_Colress_SureTurnOffBrutal, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							playse(SE_PC_OFF)
							msgbox(gText_Colress_BrutalOff, MSGBOX_DEFAULT)
							waitse
							closemessage
							clearflag(FLAG_BRUTAL_MODE_ON)
							clearflag(FLAG_SMART_WILD_AI_ON)
							special(ReverseHiddenItemFlags)
						}
					}
				case 1:
					msgbox(Zone0Sanctuary_Text_Colress_NuzlockeExplained)
					msgbox(gText_Colress_WouldTurnOffNuzlocke, MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						msgbox(gText_Colress_SureTurnOffNuzlocke, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							playse(SE_PC_OFF)
							msgbox(gText_Colress_NuzlockeOff, MSGBOX_DEFAULT)
							waitse
							closemessage
							clearflag(FLAG_NUZLOCKE_ON)
							clearflag(FLAG_NUZLOCKE_FOSSIL_RECEIVED)
							callnative(GlobalNuzlockeClear)
						}
					}
				case 2:
					call(EventScript_MusicMenu)
				case 3:
					call(EventScript_ExpAll)
				case 4:
				case MULTI_B_PRESSED:
					goto(EventScript_WhenUReady)
			}
		} elif ((flag(FLAG_BRUTAL_MODE_ON) == false) && (flag(FLAG_NUZLOCKE_ON) == true) && (flag(FLAG_RANDOMIZER_ON) == false)) {
			msgbox(gText_Colress_DefaultNuzlockeMsg, MSGBOX_DEFAULT)
			multichoice(21, 0, MULTI_COLRESS_SETTINGS, FALSE)
			switch (var(VAR_RESULT)) {
				case 0:
					msgbox(Zone0Sanctuary_Text_Colress_DefaultExplained)
				case 1:
					msgbox(Zone0Sanctuary_Text_Colress_NuzlockeExplained)
					msgbox(gText_Colress_WouldTurnOffNuzlocke, MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						msgbox(gText_Colress_SureTurnOffNuzlocke, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							playse(SE_PC_OFF)
							msgbox(gText_Colress_NuzlockeOff, MSGBOX_DEFAULT)
							waitse
							closemessage
							clearflag(FLAG_NUZLOCKE_ON)
							clearflag(FLAG_NUZLOCKE_FOSSIL_RECEIVED)
							callnative(GlobalNuzlockeClear)
						}
					}
				case 2:
					call(EventScript_MusicMenu)
				case 3:
					call(EventScript_ExpAll)
				case 4:
				case MULTI_B_PRESSED:
					goto(EventScript_WhenUReady)
			}
		} elif ((flag(FLAG_BRUTAL_MODE_ON) == true) && (flag(FLAG_NUZLOCKE_ON) == false) && (flag(FLAG_RANDOMIZER_ON) == false)) {
			msgbox(gText_Colress_BrutalVanillaMsg, MSGBOX_DEFAULT)
			multichoice(21, 0, MULTI_COLRESS_SETTINGS, FALSE)
			switch (var(VAR_RESULT)) {
				case 0:
					msgbox(Zone0Sanctuary_Text_Colress_BrutalExplained)
					msgbox(gText_Colress_WouldTurnOffBrutal, MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						msgbox(gText_Colress_SureTurnOffBrutal, MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							playse(SE_PC_OFF)
							msgbox(gText_Colress_BrutalOff, MSGBOX_DEFAULT)
							waitse
							closemessage
							clearflag(FLAG_BRUTAL_MODE_ON)
							clearflag(FLAG_SMART_WILD_AI_ON)
							special(ReverseHiddenItemFlags)
						}
					}
				case 1:
					msgbox(Zone0Sanctuary_Text_Colress_NuzlockeExplained)
				case 2:
					call(EventScript_MusicMenu)
				case 3:
					call(EventScript_ExpAll)
				case 4:
				case MULTI_B_PRESSED:
					goto(EventScript_WhenUReady)
			}
		} else {
			msgbox(gText_Colress_DefaultVanillaMsg, MSGBOX_DEFAULT)
			multichoice(21, 0, MULTI_COLRESS_SETTINGS, FALSE)
			switch (var(VAR_RESULT)) {
				case 0:
					msgbox(Zone0Sanctuary_Text_Colress_DefaultExplained)
				case 1:
					msgbox(gText_Colress_VanillaExplanation)
				case 2:
					call(EventScript_MusicMenu)
				case 3:
					call(EventScript_ExpAll)
				case 4:
				case MULTI_B_PRESSED:
					goto(EventScript_WhenUReady)
			}
		}
	}
}

script EventScript_MusicMenu {
	while {
		fadedefaultbgm
		msgbox(gText_Colress_MusicType, MSGBOX_DEFAULT)
		multichoice(21, 0, MULTI_MUSIC_TYPE, FALSE)
		switch (var(VAR_RESULT)) {
			case 0:
				setvar(VAR_TEMP_0, 1)
				while (var(VAR_TEMP_0) == 1) {
					switch (var(VAR_WILD_MUSIC)) {
						case 0:
							playbgm(MUS_VS_WILD, FALSE)
							msgbox(gText_Colress_WildMusic0Msg, MSGBOX_DEFAULT)
						case 1:
							playbgm(MUS_RG_VS_WILD, FALSE)
							msgbox(gText_Colress_WildMusic1Msg, MSGBOX_DEFAULT)
						case 2:
							playbgm(MUS_DP_SEQ_BA_POKE, FALSE)
							msgbox(gText_Colress_WildMusic2Msg, MSGBOX_DEFAULT)
						case 3:
							playbgm(MUS_HG_SEQ_GS_VS_NORAPOKE, FALSE)
							msgbox(gText_Colress_WildMusic3Msg, MSGBOX_DEFAULT)
						case 4:
							playbgm(MUS_HG_SEQ_GS_VS_NORAPOKE_KANTO, FALSE)
							msgbox(gText_Colress_WildMusic4Msg, MSGBOX_DEFAULT)
						case 5:
							// playbgm(MUS_BW_SEQ_BGM_VS_NORAPOKE, FALSE)
							msgbox(gText_Colress_WildMusic5Msg, MSGBOX_DEFAULT)
					}
					multichoice(21, 0, MULTI_MUSIC_WHICH_GAME, FALSE)
					switch (var(VAR_RESULT)) {
						case 0:
							setvar(VAR_WILD_MUSIC, 0)
						case 1:
							setvar(VAR_WILD_MUSIC, 1)
						case 2:
							setvar(VAR_WILD_MUSIC, 2)
						case 3:
							setvar(VAR_WILD_MUSIC, 3)
						case 4:
							setvar(VAR_WILD_MUSIC, 4)
						case 5:
							// setvar(VAR_WILD_MUSIC, 5)
							msgbox(gText_Colress_WildMusicBWNotFinished)
						case MULTI_B_PRESSED:
							setvar(VAR_TEMP_0, 0)
					}
				}
			case 1:
				setvar(VAR_TEMP_0, 1)
				while (var(VAR_TEMP_0) == 1) {
					switch (var(VAR_TRAINER_MUSIC)) {
						case 0:
							playbgm(MUS_VS_TRAINER, FALSE)
							msgbox(gText_Colress_TrainerMusic0Msg, MSGBOX_DEFAULT)
						case 1:
							playbgm(MUS_RG_VS_TRAINER, FALSE)
							msgbox(gText_Colress_TrainerMusic1Msg, MSGBOX_DEFAULT)
						case 2:
							playbgm(MUS_DP_SEQ_BA_TRAIN, FALSE)
							msgbox(gText_Colress_TrainerMusic2Msg, MSGBOX_DEFAULT)
						case 3:
							playbgm(MUS_HG_SEQ_GS_VS_TRAINER, FALSE)
							msgbox(gText_Colress_TrainerMusic3Msg, MSGBOX_DEFAULT)
						case 4:
							playbgm(MUS_HG_SEQ_GS_VS_TRAINER_KANTO, FALSE)
							msgbox(gText_Colress_TrainerMusic4Msg, MSGBOX_DEFAULT)
						case 5:
							playbgm(MUS_BW_SEQ_BGM_VS_TRAINER, FALSE)
							msgbox(gText_Colress_TrainerMusic5Msg, MSGBOX_DEFAULT)
					}
					multichoice(21, 0, MULTI_MUSIC_WHICH_GAME, FALSE)
					switch (var(VAR_RESULT)) {
						case 0:
							setvar(VAR_TRAINER_MUSIC, 0)
						case 1:
							setvar(VAR_TRAINER_MUSIC, 1)
						case 2:
							setvar(VAR_TRAINER_MUSIC, 2)
						case 3:
							setvar(VAR_TRAINER_MUSIC, 3)
						case 4:
							setvar(VAR_TRAINER_MUSIC, 4)
						case 5:
							setvar(VAR_TRAINER_MUSIC, 5)
						case MULTI_B_PRESSED:
							setvar(VAR_TEMP_0, 0)
					}
				}

			case 2:
				setvar(VAR_TEMP_0, 1)
				while (var(VAR_TEMP_0) == 1) {
					switch (var(VAR_LEVIATHAN_MUSIC)) {
						case 0:
							playbgm(MUS_VS_GYM_LEADER, FALSE)
							msgbox(gText_Colress_LeviathanMusic0Msg, MSGBOX_DEFAULT)
						case 1:
							playbgm(MUS_RG_VS_GYM_LEADER, FALSE)
							msgbox(gText_Colress_LeviathanMusic1Msg, MSGBOX_DEFAULT)
						case 2:
							playbgm(MUS_DP_SEQ_BA_GYM, FALSE)
							msgbox(gText_Colress_LeviathanMusic2Msg, MSGBOX_DEFAULT)
						case 3:
							playbgm(MUS_HG_SEQ_GS_VS_GYMREADER, FALSE)
							msgbox(gText_Colress_LeviathanMusic3Msg, MSGBOX_DEFAULT)
						case 4:
							playbgm(MUS_HG_SEQ_GS_VS_GYMREADER_KANTO, FALSE)
							msgbox(gText_Colress_LeviathanMusic4Msg, MSGBOX_DEFAULT)
						case 5:
							// playbgm(MUS_BW_SEQ_BGM_VS_GYMLEADER, FALSE)
							msgbox(gText_Colress_LeviathanMusic5Msg, MSGBOX_DEFAULT)
					}
					multichoice(21, 0, MULTI_MUSIC_WHICH_GAME, FALSE)
					switch (var(VAR_RESULT)) {
						case 0:
							setvar(VAR_LEVIATHAN_MUSIC, 0)
						case 1:
							setvar(VAR_LEVIATHAN_MUSIC, 1)
						case 2:
							setvar(VAR_LEVIATHAN_MUSIC, 2)
						case 3:
							setvar(VAR_LEVIATHAN_MUSIC, 3)
						case 4:
							setvar(VAR_LEVIATHAN_MUSIC, 4)
						case 5:
							// setvar(VAR_LEVIATHAN_MUSIC, 5)
							msgbox(gText_Colress_LeviathanMusicBWNotFinished)
						case MULTI_B_PRESSED:
							setvar(VAR_TEMP_0, 0)
					}
				}
			case 3:
			case MULTI_B_PRESSED:
				goto(EventScript_Settings)
		}
	}
}

script EventScript_ExpAll {
	msgbox(format("{COLOR BLUE}Colress{COLOR DARK_GRAY}: The Exp. All setting, if turned on, gives members of your party that don't participate in battle 50% experience.\pThe game's experience curve is balanced around the Exp. All being turned on, though you may turn it off if you choose."))
	if (flag(FLAG_EXP_ALL_ON) == true) {
		msgbox(format("{COLOR BLUE}Colress{COLOR DARK_GRAY}: The Exp. All is currently on. Would you like to turn it off?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			playse(SE_PC_OFF)
			msgbox(format("{COLOR BLUE}Colress{COLOR DARK_GRAY}: Turned the Exp. All off."), MSGBOX_DEFAULT)
			waitse
			closemessage
			clearflag(FLAG_EXP_ALL_ON)
		}
	} else {
		msgbox(format("{COLOR BLUE}Colress{COLOR DARK_GRAY}: The Exp. All is currently off. Would you like to turn it on?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			playse(SE_PC_ON)
			msgbox(format("{COLOR BLUE}Colress{COLOR DARK_GRAY}: Turned the Exp. All on."), MSGBOX_DEFAULT)
			waitse
			closemessage
			setflag(FLAG_EXP_ALL_ON)
		}
	}
	return
}

script EventScript_WarpZone0 {
	clearflag(FLAG_IS_REVISITING_ZONE)
	switch(var(VAR_REVISITING_ZONE)) {
		case 1:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 15, 32)
			waitstate
		case 2:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 19, 32)
			waitstate
		case 3:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 23, 32)
			waitstate
		case 4:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 27, 32)
			waitstate
		case 5:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 31, 32)
			waitstate
		case 6:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 35, 32)
			waitstate
		case 7:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 39, 32)
			waitstate
		case 8:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 43, 32)
			waitstate
		case 9:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 47, 32)
			waitstate
		case 10:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 51, 32)
			waitstate
		case 11:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 15, 25)
			waitstate
		case 12:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 19, 25)
			waitstate
		case 13:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 23, 25)
			waitstate
		case 14:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 27, 25)
			waitstate
		case 15:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 31, 25)
			waitstate
		case 16:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 35, 25)
			waitstate
		case 17:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 39, 25)
			waitstate
		case 18:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 43, 25)
			waitstate
		case 19:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 47, 25)
			waitstate
		case 20:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 51, 25)
			waitstate
		case 21:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 15, 18)
			waitstate
		case 22:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 19, 18)
			waitstate
		case 23:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 23, 18)
			waitstate
		case 24:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 27, 18)
			waitstate
		case 25:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 31, 18)
			waitstate
		case 26:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 35, 18)
			waitstate
		case 27:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 39, 18)
			waitstate
		case 28:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 43, 18)
			waitstate
		case 29:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 47, 18)
			waitstate
		case 30:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 51, 18)
			waitstate
		case 31:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 15, 11)
			waitstate
		case 32:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 19, 11)
			waitstate
		case 33:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 23, 11)
			waitstate
		case 34:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 27, 11)
			waitstate
		case 35:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 31, 11)
			waitstate
		case 36:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 35, 11)
			waitstate
		case 37:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 39, 11)
			waitstate
		case 38:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 43, 11)
			waitstate
		case 39:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 47, 11)
			waitstate
		case 40:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 51, 11)
			waitstate
		case 41:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 15, 4)
			waitstate
		case 42:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 19, 4)
			waitstate
		case 43:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 23, 4)
			waitstate
		case 44:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 27, 4)
			waitstate
		case 45:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 31, 4)
			waitstate
		case 46:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 35, 4)
			waitstate
		case 47:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 39, 4)
			waitstate
		case 48:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 43, 4)
			waitstate
		case 49:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 47, 4)
			waitstate
		case 50:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 51, 4)
			waitstate
		case 51:
			setvar(VAR_REVISITING_ZONE, 0)
			warpteleport(MAP_ZONE0D, 255, 2, 25)
			waitstate
	}
}

raw `

EventScript_ExitSign::
	msgbox gText_ExitSign, MSGBOX_SIGN
	end

EventScript_GeneralSign::
	msgbox gText_GeneralSign, MSGBOX_SIGN
	end

EventScript_UniqueSign::
	msgbox gText_UniqueSign, MSGBOX_SIGN
	end

EventScript_ServicesSign::
	msgbox gText_ServicesSign, MSGBOX_SIGN
	end

EventScript_HealingSign::
	msgbox gText_HealingSign, MSGBOX_SIGN
	end

`
